name: Android Static Build Libcap

on:
  workflow_dispatch:
    inputs:
      libcap_repo:
        description: 'Libcap repository URL'
        required: false
        default: 'https://kernel.googlesource.com/pub/scm/linux/kernel/git/morgan/libcap'
      target_arch:
        description: 'Target architecture (aarch64/arm/x86_64/i686)'
        required: false
        default: 'aarch64'
      ndk_version:
        description: 'Android NDK version'
        required: false
        default: 'r26'
      android_api:
        description: 'Android API level'
        required: false
        default: '33'
      build_tools:
        description: 'Tools to build (comma separated: setcap,getcap,getpcaps,capsh)'
        required: false
        default: 'setcap,getcap,getpcaps,capsh'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Android NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: ${{ github.event.inputs.ndk_version || 'r26' }}

    - name: Install dependencies
      run: sudo apt-get install -y gcc perl

    - name: Clone libcap
      run: |
        git clone "${{ github.event.inputs.libcap_repo || 'https://kernel.googlesource.com/pub/scm/linux/kernel/git/morgan/libcap'}}" libcap

    - name: Set build parameters
      id: vars
      run: |
        # Set target triple based on architecture
        case "${{ github.event.inputs.target_arch || 'aarch64' }}" in
          aarch64) target="aarch64-linux-android" ;;
          arm) target="armv7a-linux-androideabi" ;;
          x86_64) target="x86_64-linux-android" ;;
          i686) target="i686-linux-android" ;;
          *) echo "Unsupported architecture"; exit 1 ;;
        esac
        
        echo "target=$target" >> $GITHUB_OUTPUT
        echo "api=${{ github.event.inputs.android_api || '33' }}" >> $GITHUB_OUTPUT
        echo "tools=${{ github.event.inputs.build_tools || 'setcap,getcap,getpcaps' }}" >> $GITHUB_OUTPUT

    - name: Generate cap_names.list.h
      run: |
        cd libcap/libcap
        perl -e 'while ($l=<>) { if ($l =~ /^\#define[ \t](CAP[_A-Z]+)[ \t]+([0-9]+)\s+$/) { $tok=$1; $val=$2; $tok =~ tr/A-Z/a-z/; print "{\"$tok\",$val},\n"; } }' ../libcap/include/uapi/linux/capability.h | grep -v 0x > cap_names.list.h

    - name: Build _makenames (host tool)
      run: |
        cd libcap/libcap
        gcc -O2 -I../libcap/include/uapi -I../libcap/include _makenames.c -o _makenames

    - name: Generate cap_names.h
      run: |
        cd libcap/libcap
        ./_makenames > cap_names.h

    - name: Build selected tools (static)
      run: |
        cd libcap
        export NDK_TOOLCHAIN=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin
        export TARGET=${{ steps.vars.outputs.target }}
        export API=${{ steps.vars.outputs.api }}
        
        # Build only specified tools
        make -C progs \
          CC="$NDK_TOOLCHAIN/${TARGET}${API}-clang -static" \
          AR="$NDK_TOOLCHAIN/llvm-ar" \
          OBJCOPY="$NDK_TOOLCHAIN/llvm-objcopy" \
          BUILD_STATIC=yes \
          SHARED=no \
          PTHREADS=no \
          PAM_CAP=no \
          RAISE_SETFCAP=no

        # Create output directory
        mkdir -p install/bin
        
        # Copy only requested tools
        IFS=',' read -ra TOOLS <<< "${{ steps.vars.outputs.tools }}"
        for tool in "${TOOLS[@]}"; do
          cp "progs/$tool" install/bin/
          $NDK_TOOLCHAIN/llvm-strip "install/bin/$tool"
        done

    - name: Upload artifacts
      uses: actions/upload-artifact@v4.3.1
      with:
        name: android-${{ github.event.inputs.target_arch || 'aarch64' }}-libcap-static
        path: libcap/install/bin/*
